"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BaseResponse = void 0;
const error_codes_1 = require("../constant/error.codes");
class BaseResponse {
    constructor(code, message, data, success = false, statusCode = 400, time = new Date()) {
        this.code = code;
        this.message = message;
        this.data = data;
        this.success = success;
        this.statusCode = statusCode;
        this.time = time;
    }
    static UnknownError(data) {
        return new BaseResponse(error_codes_1.ErrorCodes.UnknownError, 'Unknown error!', data);
    }
    static ValidationError(data) {
        return new BaseResponse(error_codes_1.ErrorCodes.ValidationError, 'Validation Error!', data);
    }
    static Success(data = null) {
        return new BaseResponse(0, 'OK', data, true, 200);
    }
    static UnAuthorizationError(data = null) {
        return new BaseResponse(401, 'Unauthorized!', data, false, 401);
    }
    static NotFound(data = null) {
        return new BaseResponse(404, 'Not found!', data, false, 404);
    }
    static InvalidToken(data = null) {
        return new BaseResponse(401, "Invalid token!", data, false, 401);
    }
    static InvalidImg(data = null) {
        return new BaseResponse(400, "Invalid img input", data);
    }
    static InvalidAmount(data = null) {
        return new BaseResponse(400, "Invalid amount input", data);
    }
}
exports.BaseResponse = BaseResponse;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFzZS5yZXNwb25zZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21tb24vZXJyb3IvYmFzZS5yZXNwb25zZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSx5REFBcUQ7QUFHckQsTUFBYSxZQUFZO0lBQ3JCLFlBQ1csSUFBWSxFQUNaLE9BQWUsRUFDZixJQUFTLEVBQ1QsVUFBbUIsS0FBSyxFQUN4QixhQUFxQixHQUFHLEVBQ3hCLE9BQU8sSUFBSSxJQUFJLEVBQUU7UUFMakIsU0FBSSxHQUFKLElBQUksQ0FBUTtRQUNaLFlBQU8sR0FBUCxPQUFPLENBQVE7UUFDZixTQUFJLEdBQUosSUFBSSxDQUFLO1FBQ1QsWUFBTyxHQUFQLE9BQU8sQ0FBaUI7UUFDeEIsZUFBVSxHQUFWLFVBQVUsQ0FBYztRQUN4QixTQUFJLEdBQUosSUFBSSxDQUFhO0lBQ3hCLENBQUM7SUFDTCxNQUFNLENBQUMsWUFBWSxDQUFDLElBQVU7UUFDMUIsT0FBTyxJQUFJLFlBQVksQ0FBQyx3QkFBVSxDQUFDLFlBQVksRUFBRSxnQkFBZ0IsRUFBRSxJQUFJLENBQUMsQ0FBQztJQUM3RSxDQUFDO0lBRUQsTUFBTSxDQUFDLGVBQWUsQ0FBQyxJQUFVO1FBQzdCLE9BQU8sSUFBSSxZQUFZLENBQUMsd0JBQVUsQ0FBQyxlQUFlLEVBQUUsbUJBQW1CLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDbkYsQ0FBQztJQUVELE1BQU0sQ0FBQyxPQUFPLENBQUMsT0FBWSxJQUFJO1FBQzNCLE9BQU8sSUFBSSxZQUFZLENBQUMsQ0FBQyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLEdBQUcsQ0FBQyxDQUFBO0lBQ3JELENBQUM7SUFFRCxNQUFNLENBQUMsb0JBQW9CLENBQUMsT0FBWSxJQUFJO1FBQ3hDLE9BQU8sSUFBSSxZQUFZLENBQUMsR0FBRyxFQUFFLGVBQWUsRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFLEdBQUcsQ0FBQyxDQUFBO0lBQ25FLENBQUM7SUFFRCxNQUFNLENBQUMsUUFBUSxDQUFDLE9BQVksSUFBSTtRQUM1QixPQUFPLElBQUksWUFBWSxDQUFDLEdBQUcsRUFBRSxZQUFZLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxHQUFHLENBQUMsQ0FBQTtJQUNoRSxDQUFDO0lBRUQsTUFBTSxDQUFDLFlBQVksQ0FBQyxPQUFZLElBQUk7UUFDaEMsT0FBTyxJQUFJLFlBQVksQ0FBQyxHQUFHLEVBQUUsZ0JBQWdCLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxHQUFHLENBQUMsQ0FBQTtJQUNwRSxDQUFDO0lBRUQsTUFBTSxDQUFDLFVBQVUsQ0FBQyxPQUFZLElBQUk7UUFDOUIsT0FBTyxJQUFJLFlBQVksQ0FBQyxHQUFHLEVBQUUsbUJBQW1CLEVBQUUsSUFBSSxDQUFDLENBQUE7SUFDM0QsQ0FBQztJQUVELE1BQU0sQ0FBQyxhQUFhLENBQUMsT0FBWSxJQUFJO1FBQ2pDLE9BQU8sSUFBSSxZQUFZLENBQUMsR0FBRyxFQUFFLHNCQUFzQixFQUFFLElBQUksQ0FBQyxDQUFBO0lBQzlELENBQUM7Q0FDSjtBQXhDRCxvQ0F3Q0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFcnJvckNvZGVzIH0gZnJvbSBcIi4uL2NvbnN0YW50L2Vycm9yLmNvZGVzXCI7XG5cblxuZXhwb3J0IGNsYXNzIEJhc2VSZXNwb25zZSB7XG4gICAgcHVibGljIGNvbnN0cnVjdG9yKFxuICAgICAgICBwdWJsaWMgY29kZTogbnVtYmVyLFxuICAgICAgICBwdWJsaWMgbWVzc2FnZTogc3RyaW5nLFxuICAgICAgICBwdWJsaWMgZGF0YTogYW55LFxuICAgICAgICBwdWJsaWMgc3VjY2VzczogYm9vbGVhbiA9IGZhbHNlLFxuICAgICAgICBwdWJsaWMgc3RhdHVzQ29kZTogbnVtYmVyID0gNDAwLFxuICAgICAgICBwdWJsaWMgdGltZSA9IG5ldyBEYXRlKClcbiAgICApIHsgfVxuICAgIHN0YXRpYyBVbmtub3duRXJyb3IoZGF0YT86IGFueSkge1xuICAgICAgICByZXR1cm4gbmV3IEJhc2VSZXNwb25zZShFcnJvckNvZGVzLlVua25vd25FcnJvciwgJ1Vua25vd24gZXJyb3IhJywgZGF0YSk7XG4gICAgfVxuXG4gICAgc3RhdGljIFZhbGlkYXRpb25FcnJvcihkYXRhPzogYW55KSB7XG4gICAgICAgIHJldHVybiBuZXcgQmFzZVJlc3BvbnNlKEVycm9yQ29kZXMuVmFsaWRhdGlvbkVycm9yLCAnVmFsaWRhdGlvbiBFcnJvciEnLCBkYXRhKTtcbiAgICB9XG5cbiAgICBzdGF0aWMgU3VjY2VzcyhkYXRhOiBhbnkgPSBudWxsKSB7XG4gICAgICAgIHJldHVybiBuZXcgQmFzZVJlc3BvbnNlKDAsICdPSycsIGRhdGEsIHRydWUsIDIwMClcbiAgICB9XG5cbiAgICBzdGF0aWMgVW5BdXRob3JpemF0aW9uRXJyb3IoZGF0YTogYW55ID0gbnVsbCkge1xuICAgICAgICByZXR1cm4gbmV3IEJhc2VSZXNwb25zZSg0MDEsICdVbmF1dGhvcml6ZWQhJywgZGF0YSwgZmFsc2UsIDQwMSlcbiAgICB9XG5cbiAgICBzdGF0aWMgTm90Rm91bmQoZGF0YTogYW55ID0gbnVsbCkge1xuICAgICAgICByZXR1cm4gbmV3IEJhc2VSZXNwb25zZSg0MDQsICdOb3QgZm91bmQhJywgZGF0YSwgZmFsc2UsIDQwNClcbiAgICB9XG5cbiAgICBzdGF0aWMgSW52YWxpZFRva2VuKGRhdGE6IGFueSA9IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBCYXNlUmVzcG9uc2UoNDAxLCBcIkludmFsaWQgdG9rZW4hXCIsIGRhdGEsIGZhbHNlLCA0MDEpXG4gICAgfVxuXG4gICAgc3RhdGljIEludmFsaWRJbWcoZGF0YTogYW55ID0gbnVsbCkge1xuICAgICAgICByZXR1cm4gbmV3IEJhc2VSZXNwb25zZSg0MDAsIFwiSW52YWxpZCBpbWcgaW5wdXRcIiwgZGF0YSlcbiAgICB9XG5cbiAgICBzdGF0aWMgSW52YWxpZEFtb3VudChkYXRhOiBhbnkgPSBudWxsKSB7XG4gICAgICAgIHJldHVybiBuZXcgQmFzZVJlc3BvbnNlKDQwMCwgXCJJbnZhbGlkIGFtb3VudCBpbnB1dFwiLCBkYXRhKVxuICAgIH1cbn1cbiJdfQ==